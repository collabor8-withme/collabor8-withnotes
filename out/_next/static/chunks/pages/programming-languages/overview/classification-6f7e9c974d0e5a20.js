(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[791],{6659:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/programming-languages/overview/classification",function(){return i(4643)}])},9911:function(e,n,i){"use strict";var r=i(1527);i(959);let d={logo:"Collabor8 WithNotes",primaryHue:180,useNextSeoProps:()=>({titleTemplate:"Collabor8 WithNotes"}),project:{link:"https://github.com/"},chat:{link:"https://discord.com"},toc:{title:"\uD83D\uDD17 Table Of Content"},docsRepositoryBase:"https://github.com/",footer:{text:(0,r.jsxs)("span",{children:["\uD83D\uDCE6 Collabor8 WithNotes July 24 ",new Date().getFullYear()," \xa9"," ",(0,r.jsx)("a",{href:"https://nextra.site",target:"_blank",children:"Nextra"}),"."]})},faviconGlyph:"\uD83D\uDC7B"};n.Z=d},4643:function(e,n,i){"use strict";i.r(n);var r=i(1527),d=i(8964),t=i(4139),l=i(9911);i(4062);var o=i(6736);i(3325);let s={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)},pageOpts:{filePath:"pages/programming-languages/overview/classification.md",route:"/programming-languages/overview/classification",headings:[{depth:1,value:"编程语言的分类",id:"编程语言的分类"},{depth:2,value:"按照编程技术难易程度分类",id:"按照编程技术难易程度分类"},{depth:3,value:"高级语言",id:"高级语言"},{depth:3,value:"低级语言",id:"低级语言"},{depth:2,value:"按照编程范式分类",id:"按照编程范式分类"},{depth:3,value:"面向过程语言",id:"面向过程语言"},{depth:3,value:"面向对象语言",id:"面向对象语言"},{depth:3,value:"脚本语言",id:"脚本语言"},{depth:3,value:"函数式语言",id:"函数式语言"},{depth:3,value:"逻辑编程语言",id:"逻辑编程语言"},{depth:2,value:"按照用途分类",id:"按照用途分类"},{depth:3,value:"通用目的编程语言",id:"通用目的编程语言"},{depth:3,value:"领域特定语言",id:"领域特定语言"},{depth:2,value:"按照执行方式分类",id:"按照执行方式分类"},{depth:3,value:"解释型语言",id:"解释型语言"},{depth:3,value:"编译型语言",id:"编译型语言"},{depth:3,value:"编译+解释型语言",id:"编译解释型语言"},{depth:2,value:"按照语言类型分类",id:"按照语言类型分类"},{depth:3,value:"强类型",id:"强类型"},{depth:3,value:"弱类型语言",id:"弱类型语言"},{depth:3,value:"动态类型语言",id:"动态类型语言"},{depth:3,value:"静态类型语言",id:"静态类型语言"}],timestamp:1690945233e3,pageMap:[{kind:"Meta",data:{"- cs":{title:"\uD83C\uDF83 Computer Science Basics",type:"separator"},"computer-science-basics":"Computer Science Basics","- pl":{title:"\uD83C\uDF40 Programming Languages",type:"separator"},"programming-languages":"Programming Languages","- dp":{title:"⚙️ DevOps",type:"separator"},devops:"DevOps","- web":{title:"\uD83D\uDEE0️ Web Development",type:"separator"},"web-development":"Web Development",demo:"Demo",index:"Index"}},{kind:"Folder",name:"computer-science-basics",route:"/computer-science-basics",children:[{kind:"Meta",data:{"computer-network":"Computer Network"}},{kind:"Folder",name:"computer-network",route:"/computer-science-basics/computer-network",children:[{kind:"MdxPage",name:"network",route:"/computer-science-basics/computer-network/network"},{kind:"Meta",data:{network:"Network"}}]}]},{kind:"MdxPage",name:"demo",route:"/demo"},{kind:"Folder",name:"devops",route:"/devops",children:[{kind:"MdxPage",name:"environment",route:"/devops/environment"},{kind:"MdxPage",name:"server",route:"/devops/server"},{kind:"Meta",data:{environment:"Environment",server:"Server"}}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"programming-languages",route:"/programming-languages",children:[{kind:"Meta",data:{overview:"Overview",python:"Python",javascript:"JavaScript"}},{kind:"Folder",name:"overview",route:"/programming-languages/overview",children:[{kind:"MdxPage",name:"classification",route:"/programming-languages/overview/classification"},{kind:"Meta",data:{classification:"Classification"}}]},{kind:"Folder",name:"python",route:"/programming-languages/python",children:[{kind:"Meta",data:{grammar:"index"}},{kind:"MdxPage",name:"grammar",route:"/programming-languages/python/grammar"}]}]},{kind:"Folder",name:"web-development",route:"/web-development",children:[{kind:"Meta",data:{frontend:"Front End",backend:"Back End",other:"Other"}},{kind:"Folder",name:"frontend",route:"/web-development/frontend",children:[{kind:"Meta",data:{html:"HTML",css:"CSS",js:"JavaScript","js-runtime":"JavaScript Runtime",other:"Other"}},{kind:"Folder",name:"js",route:"/web-development/frontend/js",children:[{kind:"Meta",data:{es:"ECMAScript",modularization:"Modularization",runtime:"Runtime"}},{kind:"Folder",name:"es",route:"/web-development/frontend/js/es",children:[{kind:"Meta",data:{es2015:"ES6"}},{kind:"Folder",name:"es2015",route:"/web-development/frontend/js/es/es2015",children:[{kind:"Meta",data:{let:"let const var",this:"this",iife:"IIFE",closures:"Closures",prototype:"Prototype","execution context":"Execution Context",memory:"Memory"}},{kind:"MdxPage",name:"closures",route:"/web-development/frontend/js/es/es2015/closures"},{kind:"MdxPage",name:"execution context",route:"/web-development/frontend/js/es/es2015/execution context"},{kind:"MdxPage",name:"iife",route:"/web-development/frontend/js/es/es2015/iife"},{kind:"MdxPage",name:"let",route:"/web-development/frontend/js/es/es2015/let"},{kind:"MdxPage",name:"memory",route:"/web-development/frontend/js/es/es2015/memory"},{kind:"MdxPage",name:"this",route:"/web-development/frontend/js/es/es2015/this"}]},{kind:"Folder",name:"es2016",route:"/web-development/frontend/js/es/es2016",children:[{kind:"MdxPage",name:"Untitled",route:"/web-development/frontend/js/es/es2016/Untitled"},{kind:"Meta",data:{Untitled:"Untitled"}}]}]},{kind:"MdxPage",name:"modularization",route:"/web-development/frontend/js/modularization"},{kind:"MdxPage",name:"runtime",route:"/web-development/frontend/js/runtime"}]},{kind:"Folder",name:"js-runtime",route:"/web-development/frontend/js-runtime",children:[{kind:"Folder",name:"browser",route:"/web-development/frontend/js-runtime/browser",children:[{kind:"MdxPage",name:"browser",route:"/web-development/frontend/js-runtime/browser/browser"},{kind:"MdxPage",name:"event-loop",route:"/web-development/frontend/js-runtime/browser/event-loop"},{kind:"Meta",data:{browser:"Browser","event-loop":"Event Loop"}}]}]},{kind:"Folder",name:"other",route:"/web-development/frontend/other",children:[{kind:"MdxPage",name:"cli",route:"/web-development/frontend/other/cli"},{kind:"Meta",data:{cli:"CLI"}}]}]},{kind:"Folder",name:"other",route:"/web-development/other",children:[{kind:"MdxPage",name:"cross",route:"/web-development/other/cross"},{kind:"MdxPage",name:"web",route:"/web-development/other/web"},{kind:"Meta",data:{cross:"Cross",web:"Web"}}]}]}],flexsearch:{codeblocks:!0},title:"编程语言的分类"},pageNextRoute:"/programming-languages/overview/classification",nextraLayout:t.ZP,themeConfig:l.Z};function a(e){let n=Object.assign({h1:"h1",h2:"h2",h3:"h3",p:"p",ul:"ul",li:"li",blockquote:"blockquote"},(0,o.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"编程语言的分类"}),"\n",(0,r.jsx)(n.h2,{id:"按照编程技术难易程度分类",children:"按照编程技术难易程度分类"}),"\n",(0,r.jsx)(n.h3,{id:"高级语言",children:"高级语言"}),"\n",(0,r.jsx)(n.p,{children:"高级语言采用易于识别和记忆的字符来作为关键字，也更接近人类的思维方式，编写容易读写性好，开发效率更高。"}),"\n",(0,r.jsx)(n.p,{children:"例如："}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"C"}),"\n",(0,r.jsx)(n.li,{children:"Cpp"}),"\n",(0,r.jsx)(n.li,{children:"Java"}),"\n",(0,r.jsx)(n.li,{children:"Python"}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"越是高级的语言对人类越是友好，越是符合人类的思考方式，因此开发效率高。"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"低级语言",children:"低级语言"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"机器语言"}),"\n",(0,r.jsx)(n.li,{children:"汇编语言"}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"越是低级的语言对机器越是友好，越是符合机器的思考方式，因此执行效率高。"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"按照编程范式分类",children:"按照编程范式分类"}),"\n",(0,r.jsx)(n.h3,{id:"面向过程语言",children:"面向过程语言"}),"\n",(0,r.jsx)(n.p,{children:"面向过程语言是以过程或函数为基础的，这种语言对底层硬件，内存等操作比较方便，但是写代码和调试维护等会很麻烦"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"C"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"面向对象语言",children:"面向对象语言"}),"\n",(0,r.jsx)(n.p,{children:"面向对象语言（Object-Oriented Language）是一类以对象作为基本程序结构单位的程序设计语言，指用于描述的设计是以对象为核心，而对象是程序运行时刻的基本成分。语言中提供了类、继承等成分。"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"java"}),"\n",(0,r.jsx)(n.li,{children:"Cpp"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"脚本语言",children:"脚本语言"}),"\n",(0,r.jsx)(n.p,{children:"脚本语言并不是一个明确定义的编程语言类型，而是一种用途广泛的编程语言，用于编写脚本以自动化任务或简化特定任务。很多解释型语言也被用作脚本语言。"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"python"}),"\n",(0,r.jsx)(n.li,{children:"shell"}),"\n",(0,r.jsx)(n.li,{children:"php"}),"\n",(0,r.jsx)(n.li,{children:"javascript"}),"\n",(0,r.jsx)(n.li,{children:"ruby"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"函数式语言",children:"函数式语言"}),"\n",(0,r.jsx)(n.h3,{id:"逻辑编程语言",children:"逻辑编程语言"}),"\n",(0,r.jsx)(n.h2,{id:"按照用途分类",children:"按照用途分类"}),"\n",(0,r.jsx)(n.h3,{id:"通用目的编程语言",children:"通用目的编程语言"}),"\n",(0,r.jsx)(n.p,{children:"GPL General-Purpose Language 通用目的编程语言是一种设计用于解决广泛问题和任务的编程语言。它们在各种领域都有应用，并且可以用于开发各种类型的软件和应用程序"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Python"}),"\n",(0,r.jsx)(n.li,{children:"Java"}),"\n",(0,r.jsx)(n.li,{children:"C++"}),"\n",(0,r.jsx)(n.li,{children:"C#"}),"\n",(0,r.jsx)(n.li,{children:"JavaScrip"}),"\n",(0,r.jsx)(n.li,{children:"Ruby"}),"\n",(0,r.jsx)(n.li,{children:"Go"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"领域特定语言",children:"领域特定语言"}),"\n",(0,r.jsx)(n.p,{children:"DSL Domain-Specific Language 领域特定语言是一种针对特定领域或问题域而设计的编程语言。它们专注于解决某个特定领域的问题，因此通常具有更高的表达能力和易用性，比通用目的编程语言在特定领域更有效。DSL 可以更接近于领域专家的自然语言，因此可以更容易地表达和解决特定问题。"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SQL (用于关系数据库查询)"}),"\n",(0,r.jsx)(n.li,{children:"HTML/CSS (用于网页标记和样式)"}),"\n",(0,r.jsx)(n.li,{children:"Regular Expression (用于字符串匹配)"}),"\n",(0,r.jsx)(n.li,{children:"GraphQL (用于数据查询)"}),"\n",(0,r.jsx)(n.li,{children:"Makefile (用于构建软件)"}),"\n",(0,r.jsx)(n.li,{children:"LaTeX (用于排版科技文档)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"按照执行方式分类",children:"按照执行方式分类"}),"\n",(0,r.jsx)(n.h3,{id:"解释型语言",children:"解释型语言"}),"\n",(0,r.jsx)(n.p,{children:"解释性语言是一种在运行时逐行解释并执行程序代码的语言。在解释性语言中，代码不需要预先编译成二进制代码，而是通过解释器逐行翻译成机器代码，并立即执行。解释性语言的代码可以直接在计算机上运行，而不需要先进行编译。每当程序运行时，解释器都会逐行解释代码，并将其转换为计算机可以理解的指令来执行。"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"python"}),"\n",(0,r.jsx)(n.li,{children:"javascript"}),"\n",(0,r.jsx)(n.li,{children:"lua"}),"\n",(0,r.jsx)(n.li,{children:"ruby"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"编译型语言",children:"编译型语言"}),"\n",(0,r.jsx)(n.p,{children:"编译型语言是指在运行之前需要先将源代码编译成机器代码的语言。编译过程由编译器完成，它会将整个源代码转换成等价的机器代码文件（通常是二进制文件），然后可以直接在计算机上执行。编译型语言的运行速度通常较快，因为代码在执行之前已经被完整地翻译成机器代码"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"C"}),"\n",(0,r.jsx)(n.li,{children:"Cpp"}),"\n",(0,r.jsx)(n.li,{children:"Go"}),"\n",(0,r.jsx)(n.li,{children:"Rust"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"编译解释型语言",children:"编译+解释型语言"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"java"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"按照语言类型分类",children:"按照语言类型分类"}),"\n",(0,r.jsx)(n.h3,{id:"强类型",children:"强类型"}),"\n",(0,r.jsx)(n.p,{children:"强类型语言是指在编程过程中要求严格定义和处理数据类型的语言。在强类型语言中，变量的数据类型必须在声明时明确指定，并且不允许进行隐式类型转换。如果要进行类型转换，通常需要显式地进行类型转换操作。这种严格的类型检查能够提高代码的安全性和可靠性，但也可能需要更多的类型转换代码"}),"\n",(0,r.jsx)(n.p,{children:"强类型语言，一旦一个变量被指定了某个数据类型，如果不经过强制类型转换，那么它就永远是这个数据类型。你不能把一个整形变量当成一个字符串来处理。"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"java"}),"\n",(0,r.jsx)(n.li,{children:"Cpp"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"弱类型语言",children:"弱类型语言"}),"\n",(0,r.jsx)(n.p,{children:"弱类型语言是指对数据类型较为宽松，允许在一定程度上隐式地进行类型转换的语言。在弱类型语言中，变量的数据类型可以根据上下文进行自动推断或隐式转换，这样的特性可以方便开发者，但也可能增加代码出错的可能性。"}),"\n",(0,r.jsx)(n.p,{children:"数据类型可以被忽略，一个变量可以赋不同数据类型的值。一旦给一个整型变量a赋一个字符串值，那么a就变成字符类型。"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"javascript"}),"\n",(0,r.jsx)(n.li,{children:"python2.x"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"动态类型语言",children:"动态类型语言"}),"\n",(0,r.jsx)(n.p,{children:"动态类型语言是指在运行期间才去做数据类型检查的语言，说的是数据类型，动态语言说的是运行是改变结构，说的是代码结构。动态类型语言的数据类型不是在编译阶段决定的，而是把类型绑定延后到了运行阶段。"}),"\n",(0,r.jsx)(n.h3,{id:"静态类型语言",children:"静态类型语言"}),"\n",(0,r.jsx)(n.p,{children:"静态语言的数据类型是在编译其间确定的或者说运行之前确定的，编写代码的时候要明确确定变量的数据类型"})]})}n.default=(0,d.j)(s)}},function(e){e.O(0,[774,935,888,179],function(){return e(e.s=6659)}),_N_E=e.O()}]);